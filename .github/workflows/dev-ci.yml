name: dev ci workflows

on:
  pull_request:
    branches:
      - 'dev'

jobs:
  build:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Generate .env.test
        run: |
          touch .env.test
          echo DATABASE_HOST=${{ secrets.DATABASE_HOST }} >> .env.test
          echo DATABASE_PORT=${{ secrets.DATABASE_PORT }} >> .env.test
          echo DATABASE_USER=${{ secrets.DATABASE_USER }} >> .env.test
          echo DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} >> .env.test
          echo DATABASE_NAME=${{ secrets.DATABASE_NAME_TEST }} >> .env.test
          echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env.test


          echo JWT_ACCESS_TOKEN_SECRET=${{ secrets.JWT_ACCESS_TOKEN_SECRET_DEV }} >> .env.test
          echo JWT_ACCESS_TOKEN_EXPIRATION_TIME=${{ secrets.JWT_ACCESS_TOKEN_EXPIRATION_TIME_DEV }} >> .env.test
          echo JWT_REFRESH_TOKEN_SECRET=${{ secrets.JWT_REFRESH_TOKEN_SECRET_DEV }} >> .env.test
          echo JWT_REFRESH_TOKEN_EXPIRATION_TIME=${{ secrets.JWT_REFRESH_TOKEN_EXPIRATION_TIME_DEV }} >> .env.test

          echo JWT_ADMIN_ACCESS_TOKEN_SECRET=${{ secrets.JWT_ADMIN_ACCESS_TOKEN_SECRET_DEV }} >> .env.test
          echo JWT_ADMIN_ACCESS_TOKEN_EXPIRATION_TIME=${{ secrets.JWT_ADMIN_ACCESS_TOKEN_EXPIRATION_TIME_DEV }} >> .env.test
          echo JWT_ADMIN_REFRESH_TOKEN_SECRET=${{ secrets.JWT_ADMIN_REFRESH_TOKEN_SECRET_DEV }} >> .env.test
          echo JWT_ADMIN_REFRESH_TOKEN_EXPIRATION_TIME=${{ secrets.JWT_ADMIN_REFRESH_TOKEN_EXPIRATION_TIME_DEV }} >> .env.test

          echo JWT_EXCHANGE_TOKEN_SECRET=${{ secrets.JWT_EXCHANGE_TOKEN_SECRET_DEV }} >> .env.test
          echo JWT_EXCHANGE_TOKEN_EXPIRATION_TIME=${{ secrets.JWT_EXCHANGE_TOKEN_EXPIRATION_TIME_DEV }} >> .env.test
          echo JWT_ISSUER=${{ secrets.JWT_ISSUER }} >> .env.test

          echo GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} >> .env.test
          echo GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} >> .env.test
          echo GOOGLE_CLIENT_ID_ANDROID=${{ secrets.GOOGLE_CLIENT_ID_ANDROID_DEV }} >> .env.test

          echo GOOGLE_API_KEY_NODE=${{ secrets.GOOGLE_API_KEY_NODE }} >> .env.test
          echo GOOGLE_API_KEY_FIREBASE=${{ secrets.GOOGLE_API_KEY_FIREBASE }} >> .env.test
          
          echo GOOGLE_PROJECT_ID=${{ secrets.GOOGLE_PROJECT_ID }} >> .env.test
          echo GOOGLE_FIREBASE_ANDROID_APP_ID=${{ secrets.GOOGLE_FIREBASE_ANDROID_APP_ID }} >> .env.test
          echo GOOGLE_FIREBASE_MESSAGINGSENDER_ID=${{ secrets.GOOGLE_FIREBASE_MESSAGINGSENDER_ID }} >> .env.test
          
          
          
          echo KAKAO_APP_ID=${{ secrets.KAKAO_APP_ID }} >> .env.test

          echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env.test
          echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env.test
          echo AWS_REGION=${{ secrets.AWS_REGION }} >> .env.test
          echo AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME_TEST }} >> .env.test
          echo AWS_CLOUDFRONT_URL=${{ secrets.AWS_CLOUDFRONT_URL_DEV }} >> .env.test


          echo EMAIL_SERVICE=${{ secrets.EMAIL_SERVICE }} >> .env.test
          echo EMAIL_ADDRESS=${{ secrets.EMAIL_ADDRESS }} >> .env.test
          echo EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} >> .env.test

          echo ADMIN_PAGE_DOMAIN=${{ secrets.ADMIN_PAGE_DOMAIN_TEST }} >> .env.test


          cat .env.test
      - name: Generate .env.dev
        run: |
          touch .env.dev
          echo DATABASE_HOST=${{ secrets.DATABASE_HOST }} >> .env.dev
          echo DATABASE_PORT=${{ secrets.DATABASE_PORT }} >> .env.dev
          echo DATABASE_USER=${{ secrets.DATABASE_USER }} >> .env.dev
          echo DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} >> .env.dev
          echo DATABASE_NAME=${{ secrets.DATABASE_NAME_DEV }} >> .env.dev
          echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env.dev

          echo JWT_ACCESS_TOKEN_SECRET=${{ secrets.JWT_ACCESS_TOKEN_SECRET_DEV }} >> .env.dev
          echo JWT_ACCESS_TOKEN_EXPIRATION_TIME=${{ secrets.JWT_ACCESS_TOKEN_EXPIRATION_TIME_DEV }} >> .env.dev
          echo JWT_REFRESH_TOKEN_SECRET=${{ secrets.JWT_REFRESH_TOKEN_SECRET_DEV }} >> .env.dev
          echo JWT_REFRESH_TOKEN_EXPIRATION_TIME=${{ secrets.JWT_REFRESH_TOKEN_EXPIRATION_TIME_DEV }} >> .env.dev

          echo JWT_ADMIN_ACCESS_TOKEN_SECRET=${{ secrets.JWT_ADMIN_ACCESS_TOKEN_SECRET_DEV }} >> .env.dev
          echo JWT_ADMIN_ACCESS_TOKEN_EXPIRATION_TIME=${{ secrets.JWT_ADMIN_ACCESS_TOKEN_EXPIRATION_TIME_DEV }} >> .env.dev
          echo JWT_ADMIN_REFRESH_TOKEN_SECRET=${{ secrets.JWT_ADMIN_REFRESH_TOKEN_SECRET_DEV }} >> .env.dev
          echo JWT_ADMIN_REFRESH_TOKEN_EXPIRATION_TIME=${{ secrets.JWT_ADMIN_REFRESH_TOKEN_EXPIRATION_TIME_DEV }} >> .env.dev

          echo JWT_EXCHANGE_TOKEN_SECRET=${{ secrets.JWT_EXCHANGE_TOKEN_SECRET_DEV }} >> .env.dev
          echo JWT_EXCHANGE_TOKEN_EXPIRATION_TIME=${{ secrets.JWT_EXCHANGE_TOKEN_EXPIRATION_TIME_DEV }} >> .env.dev

          echo JWT_ISSUER=${{ secrets.JWT_ISSUER }} >> .env.dev

          echo GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} >> .env.dev
          echo GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} >> .env.dev
          echo GOOGLE_CLIENT_ID_ANDROID=${{ secrets.GOOGLE_CLIENT_ID_ANDROID_DEV }} >> .env.dev

          echo GOOGLE_API_KEY_NODE=${{ secrets.GOOGLE_API_KEY_NODE }} >> .env.dev
          echo GOOGLE_API_KEY_FIREBASE=${{ secrets.GOOGLE_API_KEY_FIREBASE }} >> .env.dev
          
          echo GOOGLE_PROJECT_ID=${{ secrets.GOOGLE_PROJECT_ID }} >> .env.dev
          echo GOOGLE_FIREBASE_ANDROID_APP_ID=${{ secrets.GOOGLE_FIREBASE_ANDROID_APP_ID }} >> .env.dev
          echo GOOGLE_FIREBASE_MESSAGINGSENDER_ID=${{ secrets.GOOGLE_FIREBASE_MESSAGINGSENDER_ID }} >> .env.dev
          
          echo KAKAO_APP_ID=${{ secrets.KAKAO_APP_ID }} >> .env.dev

          echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env.dev
          echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env.dev
          echo AWS_REGION=${{ secrets.AWS_REGION }} >> .env.dev
          echo AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME_DEV }} >> .env.dev
          echo AWS_CLOUDFRONT_URL=${{ secrets.AWS_CLOUDFRONT_URL_DEV }} >> .env.dev

          
          echo EMAIL_SERVICE=${{ secrets.EMAIL_SERVICE }} >> .env.dev
          echo EMAIL_ADDRESS=${{ secrets.EMAIL_ADDRESS }} >> .env.dev
          echo EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} >> .env.dev

          echo ADMIN_PAGE_DOMAIN=${{ secrets.ADMIN_PAGE_DOMAIN_DEV }} >> .env.dev


          cat .env.dev
      - name: Install Dependencies
        run: npm ci
      # - name: Run e2e test
      #   run: npm run test:e2e
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm run build --if-present
      - name: Extract Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/madeit
          #tags: type=semver,prefix="dev-api-",pattern={{version}}
          tags: type=raw,value=dev-api-0.7.16
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Dockerfile and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./dev.Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
